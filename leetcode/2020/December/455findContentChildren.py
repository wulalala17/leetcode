# 455.分发饼干
#
# 假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。
# 对每个孩子i，都有一个胃口值g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干j，都有一个尺寸s[j] 。
# 如果s[j] >= g[i]，我们可以将这个饼干j分配给孩子i ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。
# 示例1:
# 输入: g = [1, 2, 3], s = [1, 1]
# 输出: 1
# 解释:你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1, 2, 3。虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。所以你应该输出1。
#
# 示例2:
# 输入: g = [1, 2], s = [1, 2, 3]
# 输出: 2
# 解释:你有两个孩子和三块小饼干，2个孩子的胃口值分别是1, 2。你拥有的饼干数量和尺寸都足以让所有孩子满足。所以你应该输出2.

class Solution(object):  # 排序+贪心
    def findContentChildren(self, g, s):
        """
        :type g: List[int]
        :type s: List[int]
        :rtype: int
        """
        i, j = 0, 0
        g1 = sorted(g)
        s1 = sorted(s)
        res = 0
        while i < len(g) and j < len(s):
            if g1[i] <= s1[j]:
                res += 1
                i += 1
                j += 1
                continue
            else:
                j += 1
        return res